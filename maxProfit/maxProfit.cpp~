#include <iostream>
#include <algorithm>

void compute(int* v, int n){
	int profit[n+1][n+1];

	int i,j;

	for(i=0;i<=n;i++)
		for(j=0;j<=n;j++)
			profit[i][j] = -1;

	for(i = n; i>=1; i--){
		for(j=n;j>=1; j--){
			if(j < i) continue;

			if(j == n) profit[i][j] = v[n-1];
			else{
				if(i+j > n) 
					profit[i][j] = std::max(v[j-1], profit[i][j+1]);
				else
					profit[i][j] = std::max(v[j-1] + profit[i+1][i+j], profit[i][j+1]);
				
			}
		}

	}
	
	for(i=0;i<=n;i++){
		for(j=0;j<=n;j++)
			std::cout << profit[i][j] << ", ";

		std::cout << std::endl;
	}
}

int main(){

	int arr[] = {1,1,1,1,1,1,1,1,1,1,1,1};

	compute(arr, sizeof(arr)/sizeof(arr[0]));

}
